<?= $this->extend('default') ?>

<?= $this->section('title') ?>Colophon<?= $this->endSection() ?>
<?= $this->section('og-title') ?>Colophon<?= $this->endSection() ?>
<?= $this->section('description') ?>The colophon, containing information about how this website and its design came to be.<?= $this->endSection() ?>

<?= $this->section('content') ?>
    <div class="content">
        <header class="title">
            <h1>Colophon</h1>
        </header>
        <article>
            <div class="content__body">
                <p>
                    This site runs on a custom PHP/MySQL backend built using <a href="https://codeigniter.com/" target="_blank" rel="noopener noreferrer">CodeIgniter 4</a>. 
                    (It's not the most modern or popular choice of framework, but I was 
                    feeling nostalgic for my time spent working with CI in the early 2010s, 
                    and it still does a perfectly good job.) Data imports are mostly 
                    accomplished with either RSS or HTTP requests; the Spotify Web API parts 
                    make use of <a href="https://github.com/jwilsson/spotify-web-api-php" target="_blank" rel="noopener noreferrer">Jonathan Wilsson's helpful PHP wrapper</a>.
                </p>

                <p>
                    The frontend is written in plain HTML and CSS â€“ the design was simple enough 
                    to not bother with pre-processors, and I hate Tailwind. It uses CSS features 
                    (Grid, Flexbox, Variables) that still feel like recent additions to me even 
                    though they've been in the spec for decades at this point. The JavaScript is 
                    minimal and non-critical.
                </p>

                <p>
                    Although I wrote the code using <a href="https://windsurf.com" target="_blank" rel="noopener noreferrer">Windsurf</a>, I barely used the AI coding features, 
                    apart from asking it questions about syntax I would have previously looked up 
                    on StackOverflow. During development I used <a href="https://www.docker.com" target="_blank" rel="noopener noreferrer">Docker</a> to run the site locally, 
                    which makes building and managing services that can all talk to each other 
                    incredibly straightforward.
                </p>

                <p>
                    The type uses the <a href="https://spencermortensen.com/articles/typographic-scale/" target="_blank" rel="noopener noreferrer">classical typographical scale</a> and harmonic ratios between 
                    heading and content sizes.  Headings are set in <a href="https://fonts.google.com/specimen/Inclusive+Sans" target="_blank" rel="noopener noreferrer">Inclusive Sans</a>, a neo-grotesque 
                    designed for accessibility and readability and available for free from 
                    Google Fonts.
                </p>

                <p>
                    The colour palette was generated by <a href="https://matthewpennell.github.io/Synaesthesia.js/" target="_blank" rel="noopener noreferrer">a stupid little tool</a> I built more than a 
                    decade ago to turn words into hex colours, although the final CSS variables use 
                    the relatively new <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch" target="_blank" rel="noopener noreferrer">oklch</a>() functional notation to make it simpler to lighten or 
                    darken them.
                </p>

                <p>
                    The icons in the <a href="/consuming">Consuming</a> section are by Muhammad Nur Auliady Pamungkas; I found 
                    them on <a href="https://thenounproject.com/browse/collection-icon/hobbies-and-freetime-264540/" target="_blank" rel="noopener noreferrer">The Noun Project</a> 
                    (CC BY 3.0 license).
                </p>

                <p>The source code is of course all on <a href="https://github.com/matthewpennell/midair" target="_blank" rel="noopener noreferrer">GitHub</a>.</p>
            </div>
        </article>
    </div>
<?= $this->endSection() ?>
